# frozen_string_literal: true

require_relative 'deck'
require_relative 'deck_helper'
require_relative 'user'
require_relative 'bank'

class Menu
  # include DeckHelper

  attr_accessor :current_deck

  def initialize
    @current_deck ||= Deck.new
    @select_item = {
      1 => '–í–∑—è—Ç—å –∫–∞—Ä—Ç—É',
      2 => '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥',
      3 => '–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—ã',
      4 => '–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ',
      5 => '–í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã'
    }
    def separator
      puts "-------------------------------------------"
    end
  end

  def run
    puts '–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?'
    name = gets.chomp
    puts "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É, #{name}!"
    separator
    @bank = Bank.new
    @user = User.new(name, 100)
    user_move(2)
    @user.bet(@bank)
    @dealer = User.new('Dealer', 100)
    dealer_move(2)
    @dealer.bet(@bank)
    
    main_info
    # for test
    # puts @separator
    # with_separator(cards_in_hand(@dealer))
    # print "\n"
  
    show_menu

    loop do
      choise = gets.chomp
      case choise
      when "1"
        if @user.points < 17
          user_move(1)
          show_cards(@user)
          puts "üó©  –•–æ–¥ –¥–∏–ª–µ—Ä–∞ üó©"
          if @dealer.points < 17
            dealer_move(1)
            show_cards(@dealer)
            show_menu
          else
            separator
            puts "üó© –î–∏–ª–µ—Ä –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥ üó©"
            show_cards
          end
        else
          separator
          puts "üó©  –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ! üó©"
          puts "üó©  –•–æ–¥ –¥–∏–ª–µ—Ä–∞ üó©"
          if @dealer.points < 17
            dealer_move(1)
            show_cards(@dealer)
          else
            puts "üó©  –î–∏–ª–µ—Ä –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥ üó©"
            show_cards(@dealer)
          end
          show_menu
        end
      when "2"
        puts "üó©  –•–æ–¥ –¥–∏–ª–µ—Ä–∞ üó©"
        if @dealer.points < 17
          dealer_move(1)
          show_cards
        else
          separator
          puts "üó©  –î–∏–ª–µ—Ä –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ö–æ–¥ üó©"
          show_cards
        end
      when "3"
        puts '–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞:'
        separator
        with_separator(cards_in_hand(@dealer, "show"))
        print "\n"

        puts '–í–∞—à–∏ –∫–∞—Ä—Ç—ã:'
        separator
        with_separator(cards_in_hand(@user))
        print "\n"

        if @user.points > @dealer.points && @user.points <= 21 ||
            @user.points <= 21 && @dealer.points > 21
          puts "üó©  –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üó©"
          @bank.gain(@user)
          puts "–ù–∞ –≤–∞—à–µ–º —Å—á—ë—Ç–µ: #{@user.cash}$"
          puts "–°—á—ë—Ç –¥–∏–ª–µ—Ä–∞: #{@dealer.cash}$"
        elsif @user.points == @dealer.points && @user.points <= 21
          puts "üó©  –ù–∏—á—å—è! üó©"
        elsif @user.points < @dealer.points && @dealer.points <= 21 ||
            @user.points > @dealer.points && @dealer.points <= 21
          puts "üó©  –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! üó©"
          puts "–ù–∞ –≤–∞—à–µ–º —Å—á—ë—Ç–µ: #{@user.cash}$"
          puts "–°—á—ë—Ç –¥–∏–ª–µ—Ä–∞: #{@dealer.cash}$"
        else
          puts "üó©  –ü–µ—Ä–µ–±–æ—Ä! üó©"
        end
        separator
        show_menu
      when "4"
        separator
        Menu.new.run
      when "5"
        puts '–ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å —Å–Ω–æ–≤–∞!'
        break
      else
        puts '–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!'
      end
    end
  end

  def main_info
    show_accounts
    puts "üèõ  –î–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ: #{@bank.bank_amount}$"
    puts "üÇ†  –ö–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ: #{@current_deck.deck.size}"
    show_cards
  end

  def with_separator(_method_name)
    _method_name
    print "\n"
    separator
  end

  def show_accounts
    puts "–ù–∞ –≤–∞—à–µ–º —Å—á—ë—Ç–µ: #{@user.cash}$"
    puts "–°—á—ë—Ç –¥–∏–ª–µ—Ä–∞: #{@dealer.cash}$"
  end

  def show_cards(user = nil)
    if user == @user
      puts '–£ –í–∞—Å –≤ —Ä—É–∫–µ:'
      separator
      with_separator(cards_in_hand(@user))
      print "\n"
    elsif user == @dealer
      puts '–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞:'
      separator
      with_separator(cards_in_hand(@dealer))
      print "\n"
    else
      puts '–£ –í–∞—Å –≤ —Ä—É–∫–µ:'
      separator
      with_separator(cards_in_hand(@user))
      print "\n"
      puts '–ö–∞—Ä—Ç—ã –¥–∏–ª–µ—Ä–∞:'
      separator
      with_separator(cards_in_hand(@dealer))
      print "\n"
    end
  end

  def show_menu
    puts '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ(–≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 5):'
    @select_item.each do |key, value|
      puts "#{key} üñù  #{value}"
    end
  end

  def cards_in_hand(user, show_dealer = nil)
    sum = 0
    user.hand.each do |card, _index|
      if show_dealer.nil?
        print user == @user ? "| #{card[:name]} | " : "| * |"
      else
        print "| #{card[:name]} | "
      end
      sum += card[:number] if user == @user
      sum += card[:number] unless show_dealer.nil?
    end
    print "—Å—É–º–º–∞ –æ—á–∫–æ–≤: #{sum}" if user == @user
    print "—Å—É–º–º–∞ –æ—á–∫–æ–≤: #{sum}" unless show_dealer.nil?
  end

  def dealer_move(num_of_cards)
    @dealer.take_card(num_of_cards, @current_deck)
  end

  def user_move(num_of_cards)
    @user.take_card(num_of_cards, @current_deck)
  end
end
